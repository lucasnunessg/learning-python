# üöÄ Exerc√≠cio 1: Crie uma fun√ß√£o que receba dois n√∫meros e retorne o maior deles.


def two_numbers(num1, num2):
    if num1 > num2:
        return num1
    else:
        return num2


result = two_numbers(10, 20)
print(f"O maior n√∫mero √©: {result}")


# üöÄ Exerc√≠cio 2: Calcule a m√©dia aritm√©tica dos valores contidos em uma lista.
list_numbers = [1, 2, 3, 4, 5]
soma = sum(list_numbers)
qtde = len(list_numbers)

media = soma / qtde

print(f"A m√©dia aritm√©tica da lista √©: {media}")
# Exerc√≠cio 3: Fa√ßa um programa que, dado um valor n qualquer, tal que n > 1, imprima na tela um quadrado feito de asteriscos de lado de tamanho n. Por exemplo:


def draw_square(n):

    for row in range(n):

        print(n * "*")


# üöÄ Exerc√≠cio 4: Crie uma fun√ß√£o que receba uma lista de nomes e retorne o nome com a maior quantidade de caracteres. Por exemplo, para ["Jos√©", "Lucas", "N√°dia", "Fernanda", "Cairo", "Joana"], o retorno deve ser "Fernanda".
def finds_biggest_name(names):
    biggest_name = names[0]
    for name in names:
        if len(name) > len(biggest_name):
            biggest_name = name
    return biggest_name


# ü¶ú Uma dica: Utilize a fun√ß√£o len() para verificar o tamanho do nome.

# Exerc√≠cio 5: Considere que a cobertura da tinta √© de 1 litro para cada 3 metros quadrados e que a tinta √© vendida em latas de 18 litros, que custam R$ 80,00. Crie uma fun√ß√£o que retorne dois valores em uma tupla contendo a quantidade de latas de tinta a serem compradas e o pre√ßo total a partir do tamanho de uma parede (em m¬≤).

# Exerc√≠cio 6: Crie uma fun√ß√£o que receba os tr√™s lado de um tri√¢ngulo e informe qual o tipo de tri√¢ngulo formado ou "n√£o √© triangulo", caso n√£o seja poss√≠vel formar um tri√¢ngulo.
